import random  # Импорт модуля random для генерации случайных чисел

# Функция для генерации случайного числа в диапазоне [min, max]
def random_in_range(min_val, max_val):
    return random.randint(min_val, max_val)  # Возвращает случайное целое число в заданном диапазоне

# Функция для вычисления суммы цифр числа
def digit_sum(num):
    return sum(int(digit) for digit in str(num))  # Возвращает сумму цифр числа, преобразуя число в строку и суммируя цифры

def main():
    random.seed()  # Инициализация генератора случайных чисел текущим временем

    M = int(input("Введите количество строк M: "))  # Ввод количества строк
    N = int(input("Введите количество столбцов N: "))  # Ввод количества столбцов

    # Создание и инициализация матрицы размера M x N случайными значениями в диапазоне [100, 200]
    matrix = [[random_in_range(100, 200) for _ in range(N)] for _ in range(M)]

    print("\nИсходная матрица:")
    for row in matrix:
        print("\t".join(map(str, row)))  # Вывод исходной матрицы, преобразуя элементы в строки и объединяя их с помощью табуляции

    # Вывод суммы цифр для каждой строки и поиск строки с максимальной суммой цифр
    max_digit_sum = 0
    max_digit_sum_row = -1
    print("\nСуммы цифр элементов в каждой строке:")
    for i, row in enumerate(matrix):
        row_sum = sum(digit_sum(num) for num in row)  # Вычисление суммы цифр для текущей строки
        print(f"Строка {i + 1}: {row_sum}")  # Вывод суммы цифр для текущей строки
        if row_sum > max_digit_sum:  # Проверка, является ли сумма цифр текущей строки максимальной
            max_digit_sum = row_sum  # Обновление максимальной суммы цифр
            max_digit_sum_row = i  # Обновление номера строки с максимальной суммой цифр

    if max_digit_sum_row != -1:
        print(f"\nСтрока с максимальной суммой цифр элементов: {max_digit_sum_row + 1}")  # Вывод строки с максимальной суммой цифр
    else:
        print("Матрица пуста!")  # Вывод, если матрица пуста

if __name__ == "__main__":
    main()  # Вызов основной функции программы, если программа запускается напрямую (а не импортируется)
