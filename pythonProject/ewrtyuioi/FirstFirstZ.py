import random  # Импорт модуля random для генерации случайных чисел

# Функция для генерации случайного числа в диапазоне [min, max]
def random_in_range(min_val, max_val):
    return random.randint(min_val, max_val)  # Возвращает случайное целое число в заданном диапазоне

# Функция для вывода матрицы на экран
def print_matrix(matrix):
    for row in matrix:  # Перебор строк матрицы
        for num in row:  # Перебор элементов в строке
            print(num, end="\t")  # Вывод элемента с табуляцией в качестве разделителя
        print()  # Переход на новую строку после вывода строки

# Функция для обмена значений двух элементов
def swap(a, b):
    return b, a  # Возвращает кортеж, в котором значения a и b поменялись местами

def main():
    random.seed()  # Инициализация генератора случайных чисел текущим временем

    M, N = 3, 4  # Задание размеров матрицы M x N

    # Создание и инициализация матрицы размера M x N случайными значениями в диапазоне [10, 50]
    matrix = [[random_in_range(10, 50) for _ in range(N)] for _ in range(M)]

    print("Исходная матрица:")
    print_matrix(matrix)  # Вывод исходной матрицы на экран

    # Обмен максимального и минимального элементов в каждой строке матрицы
    for i in range(M):  # Перебор строк матрицы
        min_idx, max_idx = 0, 0  # Индексы минимального и максимального элементов в текущей строке
        for j in range(1, N):  # Перебор элементов в строке, начиная со второго
            if matrix[i][j] < matrix[i][min_idx]:  # Если текущий элемент меньше минимального
                min_idx = j  # Обновление индекса минимального элемента
            if matrix[i][j] > matrix[i][max_idx]:  # Если текущий элемент больше максимального
                max_idx = j  # Обновление индекса максимального элемента
        # Обмен местами минимального и максимального элементов
        matrix[i][min_idx], matrix[i][max_idx] = swap(matrix[i][min_idx], matrix[i][max_idx])

    print("Матрица после обмена минимальных и максимальных элементов в каждой строке:")
    print_matrix(matrix)  # Вывод матрицы после выполнения обмена

    # Создание новой матрицы с минимальными и максимальными элементами
    new_matrix = [[0] * N for _ in range(2)]  # Создание новой матрицы размера 2 x N, заполненной нулями
    for j in range(N):  # Перебор столбцов матрицы
        min_val, max_val = matrix[0][j], matrix[0][j]  # Инициализация минимального и максимального элементов текущего столбца
        for i in range(1, M):  # Перебор элементов в столбце, начиная со второго
            if matrix[i][j] < min_val:  # Если текущий элемент меньше минимального
                min_val = matrix[i][j]  # Обновление минимального элемента
            if matrix[i][j] > max_val:  # Если текущий элемент больше максимального
                max_val = matrix[i][j]  # Обновление максимального элемента
        new_matrix[0][j] = min_val  # Запись минимального элемента в новую матрицу
        new_matrix[1][j] = max_val  # Запись максимального элемента в новую матрицу

    print("Новая матрица с минимальными и максимальными элементами:")
    print_matrix(new_matrix)  # Вывод новой матрицы с минимальными и максимальными элементами

if __name__ == "__main__":
    main()  # Вызов основной функции программы, если программа запускается напрямую (а не импортируется)
